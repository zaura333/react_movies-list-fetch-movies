{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","concat","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovie","_useState7","_useState8","noMovie","setNoMovie","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","data","img","Poster","Title","Plot","imdbID","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","some","item","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.292850cf.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = 'a3c75da9';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [noMovie, setNoMovie] = useState<boolean>(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setNoMovie(false);\n    setIsLoading(true);\n    getMovie(query)\n      .then(data => {\n        if ('Title' in data) {\n          const img = data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster;\n\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: img,\n            imdbId: data.imdbID,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          });\n          setIsLoading(false);\n        } else {\n          setNoMovie(true);\n          setIsLoading(false);\n        }\n      });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setNoMovie(false);\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      onAddMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': noMovie,\n              })}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {noMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              {movie\n                ? 'Search again'\n                : ' Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    const isOnList = movies.some(item => item.imdbId === movie.imdbId);\n\n    if (!isOnList) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}